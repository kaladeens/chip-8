#include <cstdint>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <fstream>

#define RAM_SIZE 4 * 1024 //memory size 
#define STACK_SIZE 16
#define HEIGHT 32
#define WIDTH 64
#define REG_SIZE 16
#define Vf 0xF
#define START_ADDRESS 0x200

class Chip8 { 
  public:
    Chip8();   // constructor
    ~Chip8();  // destructor
    uint8_t mem[RAM_SIZE];
    bool screen[HEIGHT][WIDTH]; //64 pixels wide and 32 pixels high
    uint8_t dltim;
    uint8_t sndtim;
    uint8_t keys[16];
    void readfile(char const* filename);
    uint16_t decycle();
  private:
    // functions
    uint16_t fetch();
    
    //variables
    uint16_t pc; // 12 bit pointer to curr inst 
    uint16_t ir; // index reg pint > to mem locations
    std::stack<uint16_t> stk;
    uint8_t gpr[REG_SIZE];
    uint8_t fontset[80] = {                
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0     
    0x20, 0x60, 0x20, 0x20, 0x70, // 1     
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2     
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3     
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4     
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5     
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6     
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7     
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8     
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9     
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A     
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B     
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C     
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D     
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E     
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F   
    };
};

